package nudgeexporter

import (
	"io/ioutil"
	"log"

	"github.com/ikrijah2/nudge/rawdata"
)

func httpToRawdata(traces AutoGenerated, rd *rawdata.RawData) {

	// // Origine de la transaction
	// enum Type {
	// 	TRANSACTION = 0;
	// 	SUB_TRANSACTION = 1;
	// 	SQL_REQUEST = 2;
	// }

	uuid, err := ioutil.ReadFile("uuid")
	if err != nil {
		log.Fatalln("Error reading file:", err)
	}

	uuidStr := string(uuid)
	uuidPtr := &uuidStr

	var Transactions []*rawdata.Transaction
	var ExtendedCodes []*rawdata.KeyValue
	// var SqlRequests []*rawdata.SqlRequest

	for _, span := range traces.ResourceSpans[0].InstrumentationLibrarySpans[0].Spans {

		var Transaction rawdata.Transaction

		var StartTimePointer *int64 = TimeToInt64(span.StartTimeUnixNano)
		var EndTimePointer *int64 = TimeToInt64(span.EndTimeUnixNano)

		Transaction.StartTime = StartTimePointer
		Transaction.EndTime = EndTimePointer
		Transaction.Uuid = uuidPtr

		for _, attribute := range span.Attributes {
			if attribute.Key == "http.url" {
				var UrlPointer *string = PtrCreateAndAssign(attribute.Value.StringValue)
				Transaction.Url = UrlPointer
			}

			if attribute.Key == "http.status_code" {
				// TODO
				// enum Status {
				// 	OK = 0;
				// 	KO = 1;
				// }

				var ExtendedCodePtr *rawdata.KeyValue
				var ExtendedCode rawdata.KeyValue

				ExtendedCode.Key = PtrCreateAndAssign(attribute.Key)

				ExtendedCode.Value = PtrCreateAndAssign(attribute.Value.IntValue)

				ExtendedCodePtr = &ExtendedCode
				ExtendedCodes = append(ExtendedCodes, ExtendedCodePtr)
			}
		}

		Transaction.ExtendedCodes = ExtendedCodes

		// On créé le pointeur qui va pointer sur Transaction
		var TransactionPtr *rawdata.Transaction
		TransactionPtr = &Transaction

		// On ajoute la Transaction dans le tableau des Transactions
		Transactions = append(Transactions, TransactionPtr)

	}

	rd.Transactions = Transactions

}
